/*****************************************************
# Custom CSS for Vivaldi Notes panel


## Headers
- Numbered headings, if block contains any of these classes:
  - Levels 1 to 3:      `number-header`, `numhead`, `num`, etc.
  - Levels 2 to 4:      `number-header2`, `numhead2`, `num2`, etc.


## Lists
- Some effects, if list contains any of these classes:
  - Nested order list:  `nest-order`, `nest`
  - Tree list:          `tree-list`, `tree`
  - No marker list:     `nomarker`, `-mark`, etc.

- Change list mark, `fade` class is optional:
  e.g. `- list item <i data-mark="üòÄ" class="fade"></i>`


## Blockquotes
- As the definition list (`<dl>`), if first child of blockquotes is a level 4 header (`#### h4`).

- As the card, if blockquote contains any of 'card' class.
  e.g. `> card like <s class="card"></s>`
  Abbreviation for color card:
  `card info`, `card warn`, `card alert`, `card tips`


## Tables
- Table header row:
  - The top header row follows the scroll.
  - If all header cells are empty, the header row is hidden.

- Empty rows:
  - Rows with exactly one empty cell are hidden.
  - Rows with two or more empty cells act as section dividers inside the table.

- Cell content styles:
  - Cells containing `<b>` elements or elements with classes `th`, `head`, or `bold` become header cells (`<th>`).
  - Cells containing `<tt>` elements or classes `code`, `kbd`, or `monospace` use a monospace font.

- Cell alignment:
  - Cells with classes `left`, `center`, `right`, `top`, `middle`, or `bottom` specify the alignment of their contents.

- Table-wide options: if elements with these classes exist anywhere inside the table, the following options apply:
  | Effect                                       | Class names                          |
  |----------------------------------------------|--------------------------------------|
  | No cell borders                              | `noborder`, `-border`                |
  | Draw border around entire table              | `frame`, `edge`                      |
  | Disable alternate row coloring               | `nostripe`, `-stripe`                |
  | Disable row highlight on hover               | `nohover`, `-hover`                  |
  | Vertical alignment inside cells: top         | `t-top`, `t-t`, `t-up`, `t-u`        |
  | Vertical alignment: middle/center            | `t-middle`, `t-m`, `t-center`, `t-c` |
  | Vertical alignment: bottom                   | `t-bottom`, `t-b`, `t-down`, `t-d`   |
  | Align table to right side                    | `t-right`, `t-r`                     |
  | Stretch table to full width                  | `full`, `max`                        |
  | Fix last row as footer (sticky)              | `footer`, `ft`                       |
  | Fix first column (sticky), disable word-wrap | `row`, `slide`, `horizontal`, `hrz`  |


## Inline HTML
- The HTML tags `<b>`, `<i>`, `<q>`, `<s>`, `<u>`, and `<tt>` have their default styles reset to enable use as utility classes.

- Line breaks (`<br>`) immediately following a `<wbr>` element are disabled.
  However, since `<wbr>` allows word breaking, automatic line wrapping will still occur if necessary.
  
- `<dl><dt><dd>` and `<details><summary>` supported and properly style.


### Decoration Classes
  Usage example for any classes:
  e.g. `<u class="class-name"> Text </u>`

- Some color classes:
  - Colors:
    red, orang/org, yellow/ylw, green/grn, cyan/aqua/cyn/aqa,
    blue/ble/blu, purple/violet/ppl/vlt, magenta/fuchsia/mgt/fch,
    white/wht, grey/gray/gry, black/blk
  - Classes:
    - Text color:            fg-**, col-**, f-**, c-**   (e.g. `fg-red`)
    - Background color:      bg-**, b-**                 (e.g. `bg-blue`)
    - Line marker color:     mark-**, mk-**, m-**        (e.g. `mk-grn`)
      Line marker:           `mark`, `mk` (highlight color)
    - Wavey underline color: wave-**, wv-**, w-**        (e.g. `wv-ylw`)
      Wavey underline:       `wave`, `wv` (highlight color)


- Text style classes:
  - Italic:           `em`, 'italic', 'oblique'
  - Bold:             `bold`, 'storong'
  - Line through:     `del`, `strike`
  - Under line:       `ins`, `underline`, `u`
  - Super Bold:       'heavy', 'impact', 'gonta'


- Font size classes:
  - Font size 140%:   `big`, `large`
  - Font size 80%:    `small`, `mini`


- Font family classes:
  - Regular:              `f-web`, `f-regular`, `f-normal`, `f-norm`
  - Monospace:            `code`, `monospace`, `tt`, `f-mono`, `f-fixed`, `f-fix`
  - Sans serif (Gothic):  `f-sans-serif`, `f-sans`, `f-gothic`, `f-go`
  - Serif (Mincho):       `f-serif`, `f-classic`, `f-book`, `f-mincho`, `f-min`
  - Cursive:              `f-cursive`, `f-script`, `f-hand`, `f-sousho`, `f-so`
  - Fantasy:              `f-fantasy`, `f-logo`, `f-display`, `f-fan`, `f-disp`


- Bar-meter classes:
  Use the `ba-meter`, `meter` and `progress` classes together with `data-value` attribute to display a bar-meter.
  Specify a number from 0 to 100 for `data-value`.

  e.g. `<b class="bar-meter frame" data-value="50">bae meter</b>`

  - Option parameters:
    - Inner text: Displayed in the center of Bar-meter.

    - Background color classes:
      Bar and Background color will change.
      If use `info`, `warn`, `alert` or `tips` clesse, only color of Bar changes.

    - Option clesses:
      | Class names                  |
      |------------------------------|
      | `border`, `frame`            |
      | `ruler`, `measure`           |
      | `tube`, `pipe`               |
      |  `stripe`, `ribbon`, `zebra` |
      | `slim`, `thin`               |
      | `line`, `slit`               |

    - `data-thumb` attribute
      If you specify a Emoji, etc., it will be displayed on the Bar.
      e.g. `<i class="meter b-org slim tube ruler" data-value="30" data-thumb="üê∏"></i>`


- Icon-related classes:
  Use the `icon` and `ico` classes together with one of the following classes to display an icon.
  Additionally, applying `a1`, `a2`, `a3`, or `a4` will show different icon variations.
  These classes force the element to appear as an icon, so any inner text will not be visible.

  e.g. `<i class="icon arrow right"></i>`, `<s class="ico star a1 c-yellow"></s>`

  - `icon`, `ico` : Basic icon styling (must be used together)
  - `a1` to `a4`  : Icon variations
  - Icon classes:
    - `icon arrow`, `ico arr`
    - `icon star`, `ico str`
    - `icon link`, `ico lnk`
    - `icon check`, `ico chk`
    - `icon mark`, `ico mrk`


- Rotation classes:
  Use the classes `ico`, `icon`, or transformation classes like `transform`, `trf`, `tfx` together with any of the classes below.
  Rotation is clockwise in 45-degree increments, starting from the upward direction.

  e.g. `<i class="ico arrow down left"></i>`, `<b class="tfm f-lr">üê§</b>`
  | Effect            | Class names                                                  |
  |-------------------|--------------------------------------------------------------|
  | Up           (0¬∞) | `up`, `u`,`d0`                                               |
  | Up-Right    (45¬∞) | `up right`, `u r`, `d45`                                     |
  | Right       (90¬∞) | `right`, `r`, `d90`                                          |
  | Down-Right (135¬∞) | `down right`, `d r`, `d135`                                  |
  | Down       (180¬∞) | `down`, `d`, `d180`                                          |
  | Down-Left  (225¬∞) | `down left`, `d l`, `d225`                                   |
  | Left       (270¬∞) | `left`, `l`, `d270`                                          |
  | Up-Left    (315¬∞) | `up left`, `u l`, `d315`                                     |
  |-------------------|--------------------------------------------------------------|
  | Horizontal flip   | `flip-horizontal`, `f-horz`, `flip-lr`, `left-right`, `f-lr` |
  | Verical flip      | `flip-vertical`, `f-vert`, `flip-ud`, `up-down`, `f-ud`      |


- Border box classes:
  Use the `box`, `frame` and `border` classes together with one or some of the following classes to display an Border-Box.

  e.g. `<div class="border double thick">`, `<div class="box dot cross b-blu">`

  - `box`, `frame`, `border` : Basic border-box styling (required combination)
  - Base border styles:
    - `solid`, 'single'
    - 'double', `dbl`, `w`
    - `dotted`, `dot`
    - `dashed`, `dash`, `dsh`
  - Supplemental styles (can be used alone or in combination with base styles):
    - 'cross`, `crs`, `x`
    - `interlace`, `inter`, `il`
    - `pipe`, `tube`, `wide`
    (When used alone, these implicitly include a `solid` border)
  - Border width modifiers:
    - `thick`:  thicker lines
    - `thin`:   thinner lines


- Potisioning classes:
  - `a-left`, `a-l`   : Align entire paragraph/block to the left
  - `a-center`, `a-c` : Align entire paragraph/block to the center
  - `a-right`, `a-r`  : Align entire paragraph/block to the right

  - `f-left`, `f-l`   : Float element to the left edge
  - `f-right`, `f-r`  : Float element to the right edge


### Slide-Menu DIY
~~~~md
<div class="slide-menu">  <!-- 1. menu overlay -->
<div data-thumb="üòÄ">     <!-- 2. menu base -->

  ### Table Of Contents <!-- none scroll area -->
<div>  <!-- 3. scroll area in menu -->

  - [section-1](#anc1)  <!-- e.g. -->
  - [section-2](#anc2)
  - [section-3](#anc3)
</div>
</div>
</div>
~~~~
Thr `data-thumb` attribute in "2.div" is an option used for the thumb, `‚ò∞` is used when omitted.


### Animation Classes
  See details and usage instructions in "anime/markdownNotesAnime.css".
  This file contains animation-related styles like blinking, moving effects, etc.
  >> anime/markdownNotesAnime.css




## LICENSE
> Creative Commons Zero v1.0 Universal
> This work has been dedicated to the public domain under the Creative Commons CC0 1.0 Universal license.
> To view a copy of this license, visit
> http://creativecommons.org/publicdomain/zero/1.0/
*****************************************************/

/** animation effects **/
@import "anime/markdownNotesAnime.css";


/** notes editor **/
#app:not(.note) .NotesEditor textarea.NotesEditor-Editor {
  font-family: monospace; white-space: pre; padding: 0 .5em 30vh 0; margin: .5em;
}


/**** notes markdwon ****/
#app:not(.note) .NotesEditor .MarkdownRender {scroll-behavior: smooth}
#app:not(.note) .NotesEditor .MarkdownRender > div {
  font-family: auto;  /* "auto" only used */
  --noteL0: 13px;     /* base font-size on Note Panel */

  --noteL1: calc(0.5 * var(--noteL0));
  --noteL2: calc(1.0 * var(--noteL0));
  --noteL3: calc(1.25 * var(--noteL0));
  --noteL4: calc(1.5 * var(--noteL0));
  --noteL5: calc(2.0 * var(--noteL0));
  --noteLt: calc(0.92 * var(--noteL0)); /* TABLE font-size */

  --noteCf1: hsl(from var(--colorFg) h s l / 0.08);
  --noteCf2: hsl(from var(--colorFg) h s l / 0.18);
  --noteCf3: hsl(from var(--colorFg) h s l / 0.38);
  --noteCf4: hsl(from var(--colorFg) h s l / 0.72);

  --noteCtr: hsl(from var(--colorFg) h s l / 0.04); /* TABLE row stripe */
  --noteCth: hsl(from var(--colorHighlightBg) h s l / 0.13); /* TABLE row hover */

  --noteClr: hsl(350, 100%, 54%); /* red */
  --noteClo: hsl(28, 100%, 54%);  /* orange */
  --noteCly: hsl(52, 100%, 54%);  /* yellow */
  --noteClg: hsl(114, 100%, 54%); /* green */
  --noteCla: hsl(184, 100%, 54%); /* aqua */
  --noteClb: hsl(220, 100%, 54%); /* blue */
  --noteClp: hsl(268, 100%, 54%); /* purple */
  --noteClm: hsl(309, 100%, 54%); /* magenta */
  /* Magenta / Fuchsia  mgt fch */
  --noteClw: hsl(220, 7%, 94%);   /* white */
  --noteCls: hsl(220, 7%, 56%);   /* grey */
  --noteClk: hsl(220, 7%, 8%);    /* black */

  --noteNo: counters(n-order, '-')'.'; /* format [nested order list] */

  --noteTlW: 2px; /* TreeList line width */
  --noteTlC: color-mix(in srgb, var(--colorFg) 32%, var(--colorBg)); /* TreeList line color */

  --noteHl1: hue-rotate(120deg) saturate(.9);
  --noteHl2: hue-rotate(-120deg) saturate(.9);

  --noteFtr: scale(1, 1);
  --noteIarr0: polygon(31.37%71%,31.37%95%,68.63%95%,68.63%50%,31.37%50%,5%50%,95%50%,50%5%,5%50%,31.37%50%,31.37%71%,31.37%71%,31.37%71%);
  --noteIarr1: polygon(9.5%77.25%,9.5%90%,90%90%,90%64.5%,9.5%64.5%,5%50%,95%50%,50%5%,5%50%,9.5%64.5%,9.5%77.25%,9.5%77.25%,9.5%77.25%);
  --noteIarr2: polygon(12%71%,12%91%,75%91%,75%35%,55%35%,35%35%,95%35%,65%5%,35%35%,55%35%,55%71%,28%71%,28%71%);
  --noteIarr3: polygon(13%25%,13%91%,80%91%,80%35%,60%35%,40%35%,100%35%,70%5%,40%35%,60%35%,60%71%,33%71%,33%25%);
  --noteIarr4: polygon(5%93%,5%93%,95%93%,50%48%,5%48%,95%48%,50%3%,5%48%,50%48%,18.91%79.09%,18.91%79.09%,18.91%79.09%,5%93%);

  --noteIlnk0: polygon(48.2%25%,10%25%,10%90%,75%90%,75%51.8%,65%51.8%,65%80%,20%80%,20%35%,48.2%35%,48.2%25%,48.2%20%,73.82%20%,35.63%58.19%,42.7%65.26%,80%27.96%,80%51.8%,90%51.8%,90%10%,48.2%10%,48.2%20%,48.2%25%);
  --noteIlnk1: polygon(38.2%25%,10%25%,10%90%,75%90%,75%61.8%,65%61.8%,65%80%,20%80%,20%35%,38.2%35%,38.2%25%,38.2%10%,83.82%10%,35.63%58.19%,42.7%65.26%,90%17.96%,90%61.8%,100%61.8%,100%0%,38.2%0%,38.2%10%,38.2%25%);
  --noteIlnk2: polygon(15%30%,5%30%,5%90%,75%90%,75%80%,65%80%,65%80%,15%80%,15%40%,15%40%,15%30%,25%42.59%,25%42.59%,25%70%,25%70%,60%70%,60%70%,85%70%,85%20%,25%20%,25%42.59%,15%30%);
  --noteIlnk3: polygon(15%30%,5%30%,5%90%,75%90%,75%80%,65%80%,65%80%,15%80%,15%40%,15%40%,15%30%,27.5%37.59%,27.5%37.59%,27.5%67.5%,27.5%67.5%,65%67.5%,65%67.5%,100%67.5%,100%5%,27.5%5%,27.5%37.59%,15%30%);

  --noteIstr0: polygon(50%15.82%,50%20.82%,50%39.44%,50%55.28%,50%62.09%,50%67.09%,50%62.09%,50%55.28%,50%39.44%,50%20.82%,50%15.82%,50%0%,35.3%29.78%,2.45%34.55%,26.22%57.72%,20.61%90.45%,50%75%,79.39%90.45%,73.78%57.72%,97.55%34.55%,64.7%29.78%,50%0%);
  --noteIstr1: polygon(50%15.82%,60.05%36.17%,82.51%39.44%,66.26%55.28%,70.09%77.66%,50%67.09%,47%68.67%,47%55.28%,47%39.44%,47%21.89%,50%15.82%,50%0%,35.3%29.78%,2.45%34.55%,26.22%57.72%,20.61%90.45%,50%75%,79.39%90.45%,73.78%57.72%,97.55%34.55%,64.7%29.78%,50%0%);
  --noteIstr2: polygon(50%15.82%,60.05%36.17%,82.51%39.44%,66.26%55.28%,70.09%77.66%,50%67.09%,29.91%77.66%,33.74%55.28%,17.49%39.44%,39.95%36.17%,50%15.82%,50%0%,35.3%29.78%,2.45%34.55%,26.22%57.72%,20.61%90.45%,50%75%,79.39%90.45%,73.78%57.72%,97.55%34.55%,64.7%29.78%,50%0%);
  --noteIstr3: polygon(50%15.82%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%15.82%,50%0%,34.73%34.73%,0%50%,34.73%65.27%,42.37%82.63%,50%100%,57.63%82.63%,65.27%65.27%,100%50%,65.27%34.73%,50%0%);
  --noteIstr4: polygon(74.17%25.83%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,74.17%25.83%,91.6%8.4%,50%28.41%,14.64%14.64%,28.41%50%,18.46%70.93%,8.4%91.6%,29.07%81.55%,50%71.59%,85.36%85.36%,71.59%50%,91.6%8.4%);

  --noteIchk0: polygon(75.61%29.16%,75.61%29.15%,75.61%29.15%,66.33%38.43%,54.2%50.55%,37.85%66.91%,35.22%64.28%,29.52%58.58%,22.77%51.83%,21.11%50.16%,21.11%50.16%,21.11%50.16%,37.85%66.91%,44.93%59.84%,20.18%35.09%,15.22%40.06%,9.09%46.18%,6.04%49.23%,17.95%61.14%,31.7%74.9%,41.39%84.59%,57.8%68.18%,80.56%45.42%,97.96%28.02%,87.35%17.41%,87.35%17.41%);
  --noteIchk1: polygon(41.43%28%,58.57%28%,72%28.3%,72%41.43%,72%58.57%,72%71.7%,58.57%72%,41.43%72%,28%71.7%,28%58.57%,28%41.43%,28%28%,41.43%28%,38.21%15%,15%15%,15%38.21%,15%61.79%,15%85%,38.21%85%,61.79%85%,85%85%,85%61.79%,85%38.21%,85%15%,61.79%15%,38.21%15%);
  --noteIchk2: polygon(42%50%,58%50%,72%50%,82%50%,82%50%,72%50%,58%50%,42%50%,28%50%,18%50%,18%50%,28%50%,42%50%,39%40%,18%40%,6%40%,6%60%,18%60%,39%60%,61%60%,82%60%,94%60%,94%40%,82%40%,61%40%,39%40%);
  --noteIchk3: polygon(41.43%18%,58.57%18%,73.43%26.57%,82%41.43%,82%58.57%,73.43%73.43%,58.57%82%,41.43%82%,26.57%73.43%,18%58.57%,18%41.43%,26.57%26.58%,41.43%18%,38.21%6%,17.79%17.79%,6%38.21%,6%61.79%,17.79%82.21%,38.21%94%,61.79%94%,82.21%82.21%,94%61.79%,94%38.21%,82.21%17.79%,61.79%6%,38.21%6%);
  --noteIchk4: polygon(46.12%35.51%,53.88%35.51%,60.61%39.39%,64.49%46.12%,64.49%53.88%,60.61%60.61%,53.88%64.49%,46.12%64.49%,39.39%60.61%,35.51%53.88%,35.51%46.12%,39.39%39.39%,46.12%35.51%,38.21%6%,17.79%17.79%,6%38.21%,6%61.79%,17.79%82.21%,38.21%94%,61.79%94%,82.21%82.21%,94%61.79%,94%38.21%,82.21%17.79%,61.79%6%,38.21%6%);
  --noteIchk5: polygon(50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,50%50%,19.95%9.34%,9.34%19.95%,39.39%50%,9.34%80.05%,19.95%90.66%,50%60.61%,80.05%90.66%,90.66%80.05%,60.61%50%,90.66%19.95%,80.05%9.34%,50%39.39%,19.95%9.34%);

  --noteImrk0: polygon(40%65%,60%65%,60%52.5%,85%52.5%,85%10%,15%10%,15%40%,35%40%,35%22%,65%22%,65%40.5%,40%40.5%,40%65%,65%95%,65%75%,50%75%,50%75%,35%75%,35%75%,35%95%,65%95%);
  --noteImrk1: polygon(40%65%,60%65%,62.08%52.5%,62.08%52.5%,70%5%,30%5%,35.83%40%,50%40%,50%17%,50%17%,50%40%,35.83%40%,40%65%,65%95%,65%75%,50%75%,50%75%,35%75%,35%75%,35%95%,65%95%);
  --noteImrk2: polygon(30%95%,70%95%,70%83%,60%83%,60%40%,35%40%,35%52%,40%52%,40%52%,40%52%,40%83%,30%83%,30%95%,65%25%,65%5%,50%5%,50%5%,35%5%,35%5%,35%25%,65%25%);
  --noteImrk3: polygon(55%75%,85%75%,85%35%,75%35%,80%15%,65%15%,55%35%,75%35%,75%35%,75%35%,75%35%,55%35%,55%75%,45%75%,45%35%,35%35%,40%15%,25%15%,15%35%,15%75%,45%75%);

  font-size: var(--noteL2); line-height: 1.5;
  /* counter-reset: n-head1; */
  padding: 0 .5em .5em; /* inner margin in Vivaldi-Notes */
  & :where(i, b, q, s, u, tt) {all: unset; &::before, &::after {content: none}}
  & label {display: inline}

  & *, & *::before, & *::after {box-sizing: border-box}
  & :where(wbr + br) {display: none}

  & > *:first-child:not(#hoge) {margin-top: 0}


  /** header **/
  & :where(h1, h2, h3, h4, h5, h6) {font-weight: 700; padding-left: var(--noteL1); margin: var(--noteL3) 0 var(--noteL2); word-break: keep-all; overflow-wrap: break-word}
  & h1 {font-size: 2em; padding: .07em var(--noteL1) .13em; border-radius: var(--radius) 0 0 0; background-color: var(--noteCf1)}
  & h2 {font-size: 1.5em; padding-bottom: .2em; border-bottom: solid 2px var(--noteCf2)}
  & h3 {font-size: 1.25em; padding-bottom: .2em; border-bottom: dashed 1px var(--noteCf2)}
  & h4 {font-size: 1em; display: flex; align-items: center; gap: .5em; &::after {content: ''; flex: 1; border-top: solid 1px var(--noteCf1)}}
  & h5 {font-size: .875em}
  & h6 {font-size: .80em; opacity: .6}

  /* numbering */
  &:has(> :where(.number-header, .num-head, .num, .numberheader, .numhead, .number-header2, .num-head2, .num2, .numberheader2, .numhead2)),
  & *:has(> :where(.number-header, .num-head, .num, .numberheader, .numhead, .number-header2, .num-head2, .num2, .numberheader2, .numhead2)),
  &:has(> p > :where(.number-header, .num-head, .num, .numberheader, .numhead, .number-header2, .num-head2, .num2, .numberheader2, .numhead2)),
  & *:has(> p > :where(.number-header, .num-head, .num, .numberheader, .numhead, .number-header2, .num-head2, .num2, .numberheader2, .numhead2)) {
    counter-reset: n-head1;
    --noteNh1: counter(n-head1)'.'; --noteNh2: counter(n-head1)'-'counter(n-head2)'.';
    --noteNh3: counter(n-head1)'-'counter(n-head2)'-'counter(n-head3)'.'; --noteNh4: none;
    &:has(> :where(.number-header2, .num-head2, .num2, .numberheader2, .numhead2)), &:has(> p > :where(.number-header2, .num-head2, .num2, .numberheader2, .numhead2)) {
      --noteNh1: none; --noteNh2: counter(n-head2)'.'; --noteNh3: counter(n-head2)'-'counter(n-head3)'.';
      --noteNh4: counter(n-head2)'-'counter(n-head3)'-'counter(n-head4)'.';
    }
    & > :is(h1, h2, h3, h4)::before {font-size: .8em; text-wrap: nowrap; margin-right: .5em; opacity: .6}
    & > h1 {counter-increment: n-head1; counter-reset: n-head2 n-head3 n-head4; &::before {content: var(--noteNh1, none)}}
    & > h2 {counter-increment: n-head2; counter-reset: n-head3 n-head4; &::before {content: var(--noteNh2, none)}}
    & > h3 {counter-increment: n-head3; counter-reset: n-head4; &::before {content: var(--noteNh3, none)}}
    & > h4 {counter-increment: n-head4; &::before {content: var(--noteNh4, none)}}
  }


  /** horizontal line **/
  & hr {
    height: 1px; margin: calc(3 * var(--noteL0)) 0 var(--noteL5); border: none 0; background-position: calc((100% - .8em) / 2) 0;
    background-image: repeating-linear-gradient(90deg, var(--noteCf2), var(--noteCf2) .8em, #0000 .8em, #0000 1.3em);
  }


  & :is(p, ul, ol, dl, table, pre, blockquote, details) {margin: 0 0 var(--noteL2)}
  & :is(p, div):is(:empty, :has(*:empty:only-child)) {margin: 0; padding: 0}


  /** list **/
  & :is(ul, ol) {
    padding-left: 1.5em;
    & :is(ul, ol) {margin-bottom: 0}
    & li.todo > input[type="checkbox"] {pointer-events: none}
    & li > p {
      margin: 0;
      & + p {margin-top: var(--noteL2)}
      & ~ :is(ol, ul) {margin: 0}
    }
    & li + li {margin-top: .5em}
    & li::marker {font-family: monospace}
    & li:not(:hover)::marker {color: var(--noteCf3)}
    & li.todo:not(:hover) > input[type="checkbox"]:first-child {opacity: .7}
  }
  & :where(ol) {list-style: decimal}
  & :where(ul) {list-style: disc;
    & :where(ul) {list-style: circle;
      & :where(ul) {list-style: square;
        & :where(ul) {list-style: disc}
      }
    }
  }

  & ol:has(> li > :where(.nest-order, .nest)), & ol:has(> li > :where(.nest-order, .nest)) ol { /* nested order */
    counter-reset: n-order; list-style: none !important;
    & > li {
      counter-increment: n-order; position: relative;
      &::before {content: var(--noteNo); display: inline-block; position: absolute; font-family: monospace; text-align: right; right: 100%; min-width: 10ch; margin: 0 .5em}
      &:not(:hover, :focus-within)::before {color: var(--noteCf3)}
    }
  }

  & ul:has(> li > :where(.nomark, .nomarker, .-mark, .-marker)) { /* indent list */
    & , & ul {
      list-style: none;
      & > li:not(#hoge)::before, & > li:not(#hoge)::after {content: none}
    }
  }

  & :is(ul, ol):has(> li > :where(.tree, .tree-list)) { /* tree list */
    &, & :is(ul, ol) {
      list-style: none;
      & li {
        position: relative;
        &::before, &::after {
          content: ''; position: absolute; display: inline-block;
          width: .7em; height: calc(100% + .4em); left: -1em; top: .2em;
          border: solid var(--noteTlC); border-width: 0 0 0 var(--noteTlW);
        }
        &::after {height: 1em; top: 0; border-width: 0 0 var(--noteTlW) var(--noteTlW); border-radius: 0 0 0 var(--radiusHalf)}
        &:last-of-type::before {content: none}
      }
    }
  }

  & li:has(> [data-mark], > [data-marker]) { /* user-mark */
    list-style: none; position: relative;

    & > :is([data-mark], [data-marker])::before {
      content: attr(data-mark) attr(data-marker);
      position: absolute; right: calc(100% + .2em); top: 0;
      min-width: 1.5em; text-align: center; white-space: nowrap;
    }
    &:not(:hover) > .fade:is([data-mark], [data-marker])::before {opacity: .5} /* fade-mark */
  }

  & :where(h1, h2, h3, h4, h5, h6, p) + :is(ul, ol):has(> li > :where(.tree, .tree-list)) {margin-top: -1em}
  & li > p + :is(ul, ol):has(> li > :where(.tree, .tree-list)) {margin-top: 0}


  & dl { /** definition list **/
    border-left: solid .25em var(--noteCf1); border-top-left-radius: var(--radius);
    & dl {margin: .5em 0 0}
    & > dt {
      font-weight: 600; background-color: var(--noteCf1); padding: .2em 0 .2em 1.25em;
      & + dt {margin-top: 1px}
    }
    & > dd {
      padding: .5em 0 .5em 1.25em;
      & + dd {border-top: solid 1px var(--noteCf1)}
      & > :last-child {margin-bottom: 0}
    }
  }


  & details { /** accordion box **/
    display: block; padding: 0 0 0 1.25em; border-radius: var(--radius) 0 0 var(--radius);
    border: solid .25em var(--noteCf1); border-right: none;
    & > br, & + br {display: none}

    & > summary {
      color: var(--colorFg); background-color: var(--noteCf1); margin: 0 0 0 -1.25em; padding: .2em 0 .2em 1.5em;
      font-weight: 600; border: solid #7783; border-width: 1px 0; position: relative;
      transition: color .2s; list-style: none; cursor: pointer;
      &:hover, &:focus-within {color: var(--colorHighlightBgFaded)}
      &::before {
        content: ''; display: inline-block; position: absolute; width: 1em; height: 1em; left: .25em; top: 50%;
        background-color: currentColor; clip-path: var(--noteIarr0); transform: translate(0, -50%) rotate(90deg);
        transition: .4s ease-in-out; transition-property: clip-path, transform;
      }
    }
    &[open] {
      padding-bottom: .5em;
      & > summary {
        margin-bottom: .2em;
        &::before {clip-path: var(--noteIarr1); transform: translate(0, -50%) rotate(540deg)}
      }
    }
    &:not(:hover) > summary::before {opacity: 0.38}
    & > :last-child, &:has(p:last-child:empty) > :nth-last-child(2) {margin-bottom: 0}
  }


  /** blockquote **/
  & blockquote {
    color: var(--noteCf4); background-color: unset; border: solid var(--noteCf2);
    border-width: 0 0 0 .25em; padding: 0 0 0 1.25em; margin: 0 0 var(--noteL2);
    & > :first-child {margin-top: 0}
    & > :last-child {margin-bottom: 0}

    &:has(> h4:first-child) { /* docking h4 */
      color: inherit; border-top-width: 2em; border-top-left-radius: var(--radius);
      & > h4 {
        display: block; background-color: var(--noteCf2); padding: .25em 0 .25em 1.25em;
        margin-left: -1.25em; margin-bottom: .5em;
        & + h4 {margin-top: calc(-1 * var(--noteL2) + 1px)}
        &:first-child {background-color: #0000; margin-top: -2em}
        &::after {content: none}
      }
    }
  }

  & blockquote:has(> .card, > * > .card) { /* card */
    color: inherit; background-color: var(--colorBg); border-radius: var(--radius);
    padding: var(--noteL2) var(--noteL2) var(--noteL2) 1.25em;
    box-shadow: inset 0 0 1px #fff1, 1px 3px 5px #0003; transition: box-shadow .2s;
    &:hover, &:focus-within {box-shadow: inset 0 0 1px #fff3, 1px 5px 8px #0003}

    &:has(> h4:first-child) > h4 {margin-right: calc(-1 * var(--noteL2)); &:first-child {margin-top: -3em}}
    &:has(> :where(.hl, .hl0, .hl1, .hl2), > * > :where(.hl, .hl0, .hl1, .hl2))  {
      background-color: color-mix(in srgb, var(--colorHighlightBg) 15%, var(--colorBg));
      &:has(> .hl1, > * > .hl1) {filter: hue-rotate(120deg); & > * {filter: hue-rotate(-120deg)}}
      &:has(> .hl2, > * > .hl2) {filter: hue-rotate(-120deg); & > * {filter: hue-rotate(120deg)}}
    }
    &:has(> p > :where(.alert, .bg-red, .b-red)) {background-color: hsl(from var(--noteClr) h s l / .3)}
    &:has(> p > :where(.bg-orange, .b-orange, .bg-org, .b-org)) {background-color: hsl(from var(--noteClo) h s l / .3)}
    &:has(> p > :where(.warn, .bg-yellow, .b-yellow, .bg-ylw, .b-ylw)) {background-color: hsl(from var(--noteCly) h s l / .3)}
    &:has(> p > :where(.tip, .tips, .bg-green, .b-green, .bg-grn, .b-grn)) {background-color: hsl(from var(--noteClg) h s l / .3)}
    &:has(> p > :where(.bg-aqua, .b-aqua, .bg-aqa, .b-aqa, .bg-cyan, .b-cyan, .bg-cyn, .b-cyn)) {background-color: hsl(from var(--noteCla) h s l / .3)}
    &:has(> p > :where(.info, .bg-blue, .b-blue, .bg-ble, .bg-blu, .b-ble, .b-blu)) {background-color: hsl(from var(--noteClb) h s l / .3)}
    &:has(> p > :where(.bg-purple, .b-purple, .bg-ppl, .b-ppl, .bg-violet, .b-violet, .bg-vlt, .b-vlt)) {background-color: hsl(from var(--noteClp) h s l / .3)}
    &:has(> p > :where(.bg-magenta, .b-magenta, .bg-mgt, .b-mgt, .bg-fuchsia, .b-fuchsia, .bg-fch, .b-fch)) {background-color: hsl(from var(--noteClm) h s l / .3)}
    &:has(> p > :where(.bg-white, .b-white, .bg-wht, .b-wht)) {background-color: hsl(from var(--noteClw) h s l / .3)}
    &:has(> p > :where(.bg-grey, .b-grey, .bg-gray, .b-gray, .bg-gry, .b-gry)) {background-color: hsl(from var(--noteCls) h s l / .3)}
    &:has(> p > :where(.bg-black, .b-black, .bg-blk, .b-blk)) {background-color: hsl(from var(--noteClk) h s l / .3)}
    & > p > :is(.bg-red, .b-red, .bg-orange, .b-orange, .bg-org, .b-org, .bg-yellow, .b-yellow, .bg-ylw, .b-ylw, .bg-green, .b-green,
      .bg-grn, .b-grn, .bg-aqua, .b-aqua, .bg-aqa, .b-aqa, .bg-cyan, .b-cyan, .bg-cyn, .b-cyn, .bg-blue, .b-blue, .bg-ble, .bg-blu, .b-ble, .b-blu,
      .bg-purple, .b-purple, .bg-ppl, .b-ppl, .bg-violet, .b-violet, .bg-vlt, .b-vlt, .bg-magenta, .b-magenta, .bg-mgt, .b-mgt, .bg-fuchsia, .b-fuchsia, .bg-fch, .b-fch, .bg-white,
      .b-white, .bg-wht, .b-wht, .bg-grey, .b-grey, .bg-gray, .b-gray, .bg-gry, .b-gry, .bg-black, .b-black, .bg-blk, .b-blk) {background-color: #0000; parring: 0}
  }


  /** table **/
  & table {
    font-size: var(--noteLt); border-collapse: separate; border-spacing: 0; max-width: 100%;
    & caption {color: var(--noteCf4)} /* caption */

    & :where(th, td){ /* cell */
      padding: .2em .6em; border: solid var(--noteCf2); border-width: 0 1px 1px 0;
      &:first-child {border-left-width: 1px; padding-left: max(var(--radius), .6em)}
      &:last-child {padding-right: max(var(--radius), .6em)}
    }
    & th, & td:has(> b, > .bold, > .header, > .th, > .head) {font-weight: 600; color: var(--colorAccentFg); background-image: linear-gradient(var(--colorAccentBg)); & > b {font: inherit}} /* header cell */
    & :where(th, td):has(> tt, > .code, > .kbd, > .monospace, > .fixed) {font-family: monospace; white-space: pre-wrap} /* code cell */

    & :where(thead, tfoot) > tr {background-color: var(--colorBg)}
    & thead {position: sticky; top: 0; z-index: 4} /* floating header */
    & tfoot {position: sticky; bottom: 0; z-index: 3} /* floating footer */
    & tbody {position: sticky; top: -100vh} /* deviation revision for "sticky" */
    & :where(thead, tfoot):not(:has(:where(th, td):not(:empty))) {display: none} /* none header/footer */

    & thead:has(:where(th, td):not(:empty)), & thead:not(:has(:where(th, td):not(:empty))) ~ tbody, &:not(:has(thead)) > tbody {
      & > tr:first-child > :where(th, td) {
        border-top-width: 1px;
        &:first-child {border-top-left-radius: var(--radius)}
        &:last-child {border-top-right-radius: var(--radius)}
      }
    }
    & tfoot:has(:where(th, td):not(:empty)), &:not(:has(tfoot)) > tbody {
      & > tr:last-child > :where(th, td) {
        &:first-child {border-bottom-left-radius: var(--radius)}
        &:last-child {border-bottom-right-radius: var(--radius)}
      }
    }
    & tr:not(:has(:where(th, td):not(:empty))) > :is(th, td) {font-size: 0; height: 3px; border-width: 0 0 1px} /* row-separator in the talbe */
    & tr:has(:where(th, td):only-child:empty) {display: none} /* garbage rows */
  }

  & table:has(> * > * > * > :where(.full, .max)) {min-width: 100%} /* minimum width 100% */
  & table:has(> * > * > * > :where(.noborder, .-border)) :is(th, td) {border-color: #0000; border-bottom-width: 0} /* no border */

  & table:has(> * > * > * > :where(.frame, .edge)) { /* table frame(outer border) */
    & tr:has(:where(th, td):not(:empty)) > :is(th, td):first-child {border-left-color: var(--noteCf2)}
    & tr:has(:where(th, td):not(:empty)) > :is(th, td):last-child {border-right-color: var(--noteCf2)}
    & tr:not(:has(:where(th, td):not(:empty))) {& > :is(th, td), & + tr:has(:where(th, td):not(:empty)) > :is(th, td) {border-top: solid 1px var(--noteCf2)}}
    & thead:has(:where(th, td):not(:empty)), & thead:not(:has(:where(th, td):not(:empty))) ~ tbody, &:not(:has(thead)) > tbody {& > tr:first-child > :where(th, td) {border-top: solid 1px var(--noteCf2)}}
    & tfoot:has(:where(th, td):not(:empty)), &:not(:has(tfoot)) > tbody {& > tr:last-child > :where(th, td) {border-bottom: solid 1px var(--noteCf2)}}
  }

  & table:not(:has(> * > * > * > :where(.nostripe, .-stripe))) tr:nth-child(2n+2) {background-image: linear-gradient(var(--noteCtr))} /* even row stripe */
  & table:not(:has(> * > * > * > :where(.nohover, .-hover))) tr:has(:where(th, td):not(:empty)):hover {background-image: linear-gradient(var(--noteCth))} /* hover row hotlight */

  & table:has(> * > * > * > :where(.t-top, .t-up, .t-t, .t-u)) :is(th, td){vertical-align: top} /* vertical-align: top */
  & table:has(> * > * > * > :where(.t-middle, .t-center, .t-m, .t-c)) :is(th, td){vertical-align: middle} /* vertical-align: top */
  & table:has(> * > * > * > :where(.t-bottom, .t-down, .t-b, .t-d)) :is(th, td){vertical-align: bottom} /* vertical-align: top */
  & table:has(> * > * > * > :where(.t-right, .t-r)) {margin-left: auto}

  & table :is(th, td):has(> :not(.ico, .icon, .transform, .trf, .tfm, .tfx, .trx, .trm):is(.top)){vertical-align: top !important} /* cell-align */
  & table :is(th, td):has(> :not(.ico, .icon, .transform, .trf, .tfm, .tfx, .trx, .trm):is(.middle)){vertical-align: middle !important}
  & table :is(th, td):has(> :not(.ico, .icon, .transform, .trf, .tfm, .tfx, .trx, .trm):is(.bottom)){vertical-align: bottom !important}
  & table :is(th, td):has(> :not(.ico, .icon, .transform, .trf, .tfm, .tfx, .trx, .trm):is(.left)){text-align: left !important}
  & table :is(th, td):has(> :not(.ico, .icon, .transform, .trf, .tfm, .tfx, .trx, .trm):is(.center)){text-align: center !important}
  & table :is(th, td):has(> :not(.ico, .icon, .transform, .trf, .tfm, .tfx, .trx, .trm):is(.right)){text-align: right !important}

  & table:has(> * > * > * > :where(.footer, .foot, .ft)) > tbody { /* additional sticky footer */
    & > tr:last-child {
      position: sticky; bottom: 0; z-index: 3; background-color: var(--colorBg);
      & > :is(th, td) {border-top: solid 1px var(--noteCf2)}
    }
    & > tr:nth-last-child(2) > :is(th, td) {border-bottom-width: 0}
  }
  & table:has(> * > * > * > :where(.slide, .row, .horizontal, .hrz)) { /* horizontal slide table */
    &, & code {white-space: nowrap}
    & > tbody :is(th, td):first-child {background-color: var(--colorBg); position: sticky; left: 0; z-index: 2}
    & > thead :is(th, td):first-child {background-color: var(--colorBg); position: sticky; left: 0; z-index: 5}
    & > tfoot :is(th, td):first-child {background-color: var(--colorBg); position: sticky; left: 0; z-index: 4}
    &:has(> * > * > * > :where(.footer, .ft)) > tbody > tr:last-child > :is(th, td):first-child {z-index: 4}
  }


  /** code **/
  & code {padding: .05em max(var(--radius), .4em); text-decoration: inherit; border-radius: var(--radiusHalf); background-color: var(--noteCf1)}
  & pre {
    padding: var(--noteL1) var(--noteL2); max-width: 100%; max-height: 32vh; font-size: .9em;
    background-color: var(--noteCf1); border-radius: var(--radius); box-shadow: inset 0 1px 3px #0003;
    & > code {background-color: #0000; display: unset; white-space: pre; padding: 0}
  }
  & code, & pre, & .pre {font-family: monospace; white-space: pre-wrap}


  /** image **/
  & :where(img, svg) {border-style: none; height: auto; max-width: 100%; vertical-align: bottom}


  /** link **/
  & a:any-link:not(:is([href="#"], [href="_"], [href="-"], [href="+"], [href="*"], [href="!"], [href="?"])) {
    color: var(--colorHighlightBg); text-decoration-color: #0000; transition: .2s;
    &:visited {color: color-mix(in hsl, var(--colorHighlightBg) 62%, var(--colorFg))}
    &:hover, &:focus-within {color: var(--colorHighlightBgFaded); text-decoration-color: currentColor}
    &::after {content: ''; transition: clip-path .2s; clip-path: var(--noteIlnk0)}
    &:hover::after, &:focus-within::after {clip-path: var(--noteIlnk1)}
    /* &[href^="#"]::after {clip-path: var(--noteIarr0); } /* inner link */
    /* &[href^="#"]:hover::after, &:focus-within::after {clip-path: var(--noteIarr1); } */
    &[href^="#"]::after {content: none} /* inner link */
    &:has(:is(img, svg)) { /* image-link */
      display: inline-block; position: relative; padding: .1em; margin: .2em; cursor: pointer;
      border-radius: var(--radius); box-shadow: inset 0 1px 2px #fff2, 0 1px 3px #0002;
      &:hover, &:focus-within {transform: scale(1.1)}
      &::after {content: none}
    }
  }
  & a:is([name], [id]):empty {scroll-margin-top: 4.5em} /* anchor */

  /** tooltip text **/
  & a:not(:empty):is([href="#"], [href="_"], [href="-"], [href="+"], [href="*"], [href="!"], [href="?"])[title], abbr[title] {
    color: unset; cursor: help; margin: 0 .1em; outline: none; text-decoration: underline dashed;
    &:hover, &:focus-within {color: var(--colorHighlightBg); filter: var(--noteHl2)}
    &:active {pointer-events: none}
  }


  /** frame box **/
  & :is(div, p, main, header, footer, nav, aside, section, article, menu):is(.box, .frm, .brd, .frame, .border):not(:empty) {
    --noteWbdr: 2px;
    --noteWide: calc(var(--noteWbdr) * 1);
    padding: 1em 1.5em; position: relative; margin: 0 0 var(--noteL2);
    & > :first-child {margin-top: 0}
    & > :last-child {margin-bottom: 0}

    &.thick {--noteWbdr: 3px}
    &.thin {--noteWbdr: 1px}
    &::before, &::after {
      content: ''; display: block; position: absolute; border: solid 0 var(--noteCf2); border-radius: var(--radius);
      left: .5em; top: .5em; width: calc(100% - 1em); height: calc(100% - 1em); pointer-events: none;
    }

    &:is(.double, .dbl, .w)::before, &:is(.double, .dbl, .w)::after {
      --noteWide: calc(var(--noteWbdr) * 3); border-style: double;
      left: calc(.5em - var(--noteWbdr)); width: calc(100% - 1em + var(--noteWbdr) * 2);
      top: calc(.5em - var(--noteWbdr)); height: calc(100% - 1em + var(--noteWbdr) * 2);
    }
    &:is(.double, .dbl, .w)::before {border-width: var(--noteWide)}
    &:is(.dotted, .dot)::before, &:is(.dotted, .dot)::after {border-style: dotted}
    &:is(.dotted, .dot)::before {border-width: var(--noteWbdr)}
    &:is(.dashed, .dash, .dsh)::before, &:is(.dashed, .dash, .dsh)::after {border-style: dashed}
    &:is(.dashed, .dash, .dsh)::before {border-width: var(--noteWbdr)}
    &:is(.solid, .single, .line)::before {border-style: solid; border-width: var(--noteWbdr)}

    &:is(.cross, .crs, .x)::before {border-width: var(--noteWide) 0; left: 0; width: 100%; border-radius: 0}
    &:is(.cross, .crs, .x)::after {border-width: 0 var(--noteWide); top: 0; height: 100%; border-radius: 0}
    &:is(.interlace, .inter, .lace, .il)::before {border-width: var(--noteWide); left: 0; width: 100%}
    &:is(.interlace, .inter, .lace, .il)::after {border-width: var(--noteWide); top: 0; height: 100%}
    &:is(.pipe, .wide, .tube)::before {border-width: var(--noteWide)}
    &:is(.pipe, .wide, .tube)::after {border-width: var(--noteWide); left: 0; top: 0; width: 100%; height: 100%; border-radius: calc(var(--radius) + .5em / 2)}
  }


  /** bar meter **/
  & :is(.bar-meter, .meter, .progress-bar, .progress) {
    --tmpNoteMtP: calc((var(--tmpNoteMt1, 0) + var(--tmpNoteMt0, 0)) * 1%);
    --tmpNoteMtI0: linear-gradient(90deg, hsl(from var(--tmpNoteMtC, var(--colorHighlightBg, #0000)) h s l / .9) var(--tmpNoteMtP), #0000 var(--tmpNoteMtP));
    --tmpNoteMtB: #0004;
    display: flex; align-items: center; justify-content: center; position: relative;
    min-width: 10em; min-height: 1.5em; margin: .25em .4em; border-radius: var(--radiusHalf);
    background-image: var(--tmpNoteMtI1, none, none), var(--tmpNoteMtI2, none), var(--tmpNoteMtI0, none);
    background-size: var(--tmpNoteMtP) 100%, var(--tmpNoteMtP) 100%, var(--tmpNoteMtP) 100%, 100%;
    background-repeat: no-repeat; z-index: 0;
    & + br {display: none}

    &:is(.tube, .pipe, .gloss) {text-shadow: 0 2px 2px #000c; --tmpNoteMtI1: linear-gradient(#0002 3%, #fff2 11%, #fff6 28%, #fff2 55%, #0000 78%, #0004), linear-gradient(#0000, #0001, #0003, #fff1)}
    &:is(.stripe, .ribbon, .zebra) {--tmpNoteMtI2: repeating-linear-gradient(135deg, #fff0, #fff0 .49em, #fff3 .5em, #fff3 .89em, #fff0 .9em)}
    &:is(.thin, .slim) {height: .9em; min-height: 0; margin: .55em .4em}
    &:is(.line, .slit) {height: .5em; min-height: 0; margin: .75em .4em}
    &:is(.border, .frame, .box, .brd) {box-shadow: inset 0 0 1px 1px var(--tmpNoteMtB), 0 0 1px #fff5}
    &[data-thumb]:not([data-thumb=""]) {
      --tmpNoteMkTb1: scale(1.4, 1.4);
      &::after {
        content: attr(data-thumb); position: absolute; left: var(--tmpNoteMtP); top: 50%; line-height: 1; text-shadow: none;
        transform: translate(-50%, -50%) var(--tmpNoteMkTb1, scale(1)) var(--tmpNoteMkTb0, scale(1));
      }
      &:where(.mirror-ud, .flip-ud, .f-ud, .f-du, .updown, .up-down, .flip-vertical, .f-vertical, .flip-vert, .f-vert, .f-vrt) {--tmpNoteMkTb1: scale(1.4, -1.4)}
      &:where(.mirror-lr, .flip-lr, .f-lr, .f-rl, .leftright, .left-right, .flip-horizontal, .f-horizontal, .flip-horz, .f-horz, .f-hrz) {--tmpNoteMkTb1: scale(-1.4, 1.4)}
      &:where(.up, .u, .d0, .d360, .d-0, .d-360) {--tmpNoteMkTb0: rotate(0deg)}
      &:where(.right, .r, .d90, .d-270) {--tmpNoteMkTb0: rotate(90deg)}
      &:where(.down, .d, .d180, .d-180) {--tmpNoteMkTb0: rotate(180deg)}
      &:where(.left, .l, .d-90, .d270) {--tmpNoteMkTb0: rotate(-90deg)}
      &:where(.up, .u):is(.right, .r), &:is(.d45, .d-315) {--tmpNoteMkTb0: rotate(45deg)}
      &:where(.up, .u):is(.left, .l), &:is(.d315, .d-45) {--tmpNoteMkTb0: rotate(-45deg)}
      &:where(.down, .d):is(.right, .r), &:is(.d135, .d-225) {--tmpNoteMkTb0: rotate(135deg)}
      &:where(.down, .d):is(.left, .l), &:is(.d225, d-135) {--tmpNoteMkTb0: rotate(-135deg)}
    }
    &:is(.ruler, .rule, .measure)::before {
      content: ''; position: absolute; inset: 1px 0; border-radius: inherit;
      background-image: repeating-linear-gradient(90deg, #0000, #0000 calc(20% - 1px), currentColor calc(20% - 1px), currentColor 20%), repeating-linear-gradient(90deg, #0000, #0000 calc(10% - 1px), currentColor calc(10% - 1px), currentColor calc(10%), #0000 10%, #0000 20%);
      background-repeat: no-repeat; background-position: left bottom;
      background-size: 100% max(50%, 6px), 100% max(30%, 4px); opacity: .4; z-index: -1;
    }
    /* check data-value */
    &:is([data-value^="1"], [data-value^="01"]):not([data-value="1"], [data-value$="01"]) {--tmpNoteMt1: 10}
    &:is([data-value^="2"], [data-value^="02"]):not([data-value="2"], [data-value$="02"]) {--tmpNoteMt1: 20}
    &:is([data-value^="3"], [data-value^="03"]):not([data-value="3"], [data-value$="03"]) {--tmpNoteMt1: 30}
    &:is([data-value^="4"], [data-value^="04"]):not([data-value="4"], [data-value$="04"]) {--tmpNoteMt1: 40}
    &:is([data-value^="5"], [data-value^="05"]):not([data-value="5"], [data-value$="05"]) {--tmpNoteMt1: 50}
    &:is([data-value^="6"], [data-value^="06"]):not([data-value="6"], [data-value$="06"]) {--tmpNoteMt1: 60}
    &:is([data-value^="7"], [data-value^="07"]):not([data-value="7"], [data-value$="07"]) {--tmpNoteMt1: 70}
    &:is([data-value^="8"], [data-value^="08"]):not([data-value="8"], [data-value$="08"]) {--tmpNoteMt1: 80}
    &:is([data-value^="9"], [data-value^="09"]):not([data-value="9"], [data-value$="09"]) {--tmpNoteMt1: 90}

    &:is([data-value$="1"]) {--tmpNoteMt0: 1}
    &:is([data-value$="2"]) {--tmpNoteMt0: 2}
    &:is([data-value$="3"]) {--tmpNoteMt0: 3}
    &:is([data-value$="4"]) {--tmpNoteMt0: 4}
    &:is([data-value$="5"]) {--tmpNoteMt0: 5}
    &:is([data-value$="6"]) {--tmpNoteMt0: 6}
    &:is([data-value$="7"]) {--tmpNoteMt0: 7}
    &:is([data-value$="8"]) {--tmpNoteMt0: 8}
    &:is([data-value$="9"]) {--tmpNoteMt0: 9}
    &:is([data-value$="100"]):not(#hoge) {--tmpNoteMt0: 0; --tmpNoteMt1: 100}

    &:where(.alert, .bg-red, .b-red) {--tmpNoteMtC: var(--noteClr)}
    &:where(.bg-orange, .b-orange, .bg-org, .b-org) {--tmpNoteMtC: var(--noteClo)}
    &:where(.warn, .bg-yellow, .b-yellow, .bg-ylw, .b-ylw) {--tmpNoteMtC: var(--noteCly)}
    &:where(.tip, .tips, .bg-green, .b-green, .bg-grn, .b-grn) {--tmpNoteMtC: var(--noteClg)}
    &:where(.bg-aqua, .b-aqua, .bg-aqa, .b-aqa, .bg-cyan, .b-cyan, .bg-cyn, .b-cyn) {--tmpNoteMtC: var(--noteCla)}
    &:where(.info, .bg-blue, .b-blue, .bg-ble, .bg-blu, .b-ble, .b-blu) {--tmpNoteMtC: var(--noteClb)}
    &:where(.bg-purple, .b-purple, .bg-ppl, .b-ppl, .bg-violet, .b-violet, .bg-vlt, .b-vlt) {--tmpNoteMtC: var(--noteClp)}
    &:where(.bg-magenta, .b-magenta, .bg-mgt, .b-mgt, .bg-fuchsia, .b-fuchsia, .bg-fch, .b-fch) {--tmpNoteMtC: var(--noteClm)}
    &:where(.bg-white, .b-white, .bg-wht, .b-wht) {--tmpNoteMtC: var(--noteClw)}
    &:where(.bg-grey, .b-grey, .bg-gray, .b-gray, .bg-gry, .b-gry) {--tmpNoteMtC: var(--noteCls)}
    &:where(.bg-black, .b-black, .bg-blk, .b-blk) {--tmpNoteMtC: var(--noteClk)}
  }


  /** emphasis **/
  & :where(em) {font-style: oblique; margin: 0 .1em; color: var(--colorHighlightBg); filter: var(--noteHl1)}
  & :where(strong) {font-weight: 700; font-size: 1.2em; line-height: 1; margin: 0 .1em}
  & :where(del) {color: var(--noteCf3); text-decoration: line-through; margin: 0 .1em}
  & :where(.em, .italic, .oblique){font-style: oblique}
  & :where(.strong, .bold) {font-weight: 600; margin: 0 .1em}
  & :where(.del, .strike) {text-decoration: line-through; margin: 0 .1em}
  & :where(ins, .ins, .underline, .u) {text-decoration: underline}
  & :where(.heavy, .impact, .gonta) {font-weight: 900; letter-spacing: .1em; text-shadow: 1px 0 currentColor; margin: 0 .1em}
  & :where(.code, .monospace, .f-mono, .f-monospace, f-fixed, f-fix, .tt) {font-family: monospace; white-space: pre-wrap}
  & :where(.f-web, .f-normal, .f-nrm, f-norm, .f-regular, .f-reg) {font-family: auto}
  & :where(.f-sans-serif, .f-sans, .f-gothic, .f-go) {font-family: sans-serif}
  & :where(.f-serif, .f-classic, .f-book, .f-mincho, .f-min) {font-family: serif}
  & :where(.f-cursive, .f-script, .f-hand, .f-sousho, .f-sosho, .f-so) {font-family: cursive}
  & :where(.f-fantasy, .f-fun, .f-logo, .f-fan, .f-display, f-disp ){font-family: fantasy}
  & :is(.metal, .chrome):not(#hoge) {
    color: hsl(from currentColor h s l / .1); font-weight: 900; background-clip: text; background-color: var(--colorFg);
    background-image: linear-gradient(#fff1, #fff3 19%, #fffc 31%, #fff6 37%, #fff4 43%, #0008 46%, #0003, #0004), linear-gradient(91deg, #0002, #ffd2, #0002);
    filter: drop-shadow(0px -1px 0px #fff2) drop-shadow(1px 2px 1px #0004);
    &:is(.fg-red, .col-red, .c-red, .f-red) {background-color: var(--noteClr)}
    &:is(.fg-orange, .col-orange, .c-orange, .fg-org, .col-org, .c-org, .f-org) {background-color: var(--noteClo)}
    &:is(.fg-yellow, .col-yellow, .c-yellow, .fg-ylw, .col-ylw, .c-ylw, .f-ylw) {background-color: var(--noteCly)}
    &:is(.fg-green, .col-green, .c-green, .fg-grn, .col-grn, .c-grn, .f-grn) {background-color: var(--noteClg)}
    &:is(.fg-aqua, .col-aqua, .c-aqua, .fg-aqa, .col-aqa, .c-aqa, .f-aqa, .fg-cyan, .col-cyan, .c-cyan, .fg-cyn, .col-cyn, .c-cyn, .f-cyn) {background-color: var(--noteCla)}
    &:is(.fg-blue, .col-blue, .c-blue, .fg-ble, .fg-blu, .col-ble, .col-blu, .c-ble, .c-blu, .f-ble, .f-blu) {background-color: var(--noteClb)}
    &:is(.fg-purple, .col-purple, .c-purple, .fg-ppl, .col-ppl, .c-ppl, .f-ppl, .fg-violet, .col-violet, .c-violet, .fg-vlt, .col-vlt, .c-vlt, .f-vlt) {background-color: var(--noteClp)}
    &:is(.fg-magenta, .col-magenta, .c-magenta, .fg-mgt, .col-mgt, .c-mgt, .f-gmt, .fg-fuchsia, .col-fuchsia, .c-fuchsia, .fg-fch, .col-fch, .c-fch, .f-fch) {background-color: var(--noteClm)}
    &:is(.fg-white, .col-white, .c-white, .fg-wht, .col-wht, .c-wht, .f-wht) {background-color: var(--noteClw)}
    &:is(.fg-grey, .col-grey, .c-grey, .fg-gray, .col-gray, .c-gray, .fg-gry, .col-gry, .c-gry, .f-gry) {background-color: var(--noteCls)}
    &:is(.fg-black, .col-black, .c-black, .fg-blk, .col-blk, .c-blk, .f-blk) {background-color: var(--noteClk)}
  }
  & kbd {
    color: var(--colorAccentFg); background-color: var(--colorAccentBg); font-family: monospace; display: inline-block;
    line-height: 1; border-radius: var(--radiusHalf); min-width: 2em; min-height: 1.5em; margin: 0 .25em; padding: .36em .4em .0em !important;
    text-align: center; vertical-align: middle; box-shadow: inset 0 0 1px #fff3, 0 1px 3px #0005;
  }
  & mark {
    color: inherit; background-color: #0000; padding: 0 .1em;
    background-image: linear-gradient(#0000 61%, hsl(from var(--colorHighlightBg) h s l / .62) 63%);
  }

  & :is(.big, .large){line-height: 1; font-size: 1.4em} /* font size */
  & :is(.small, .mini){font-size:.8em}

  & :has(> :is(.a-left, .a-l)) {text-align: left} /* align */
  & :has(> :is(.a-center, .a-c)) {text-align: center}
  & :has(> :is(.a-right, .a-r)) {text-align: right}

  & :is(.f-left, .f-l) {float:left; margin-right: .5em} /* left-side */
  & :is(.f-right, .f-r) {float:right; margin-left: .5em} /* right-side */
  & :is(.f-left, .f-l, .f-right, .f-r) + * {clear: both}
  & :has(> :is(.f-right, .f-r, .f-left, .f-l):last-child)::after {content: ''; display: table; clear: both}

  & :is(.hl0, .hl1, .hl2, .hl) { /* highlight colors */
    color: var(--colorHighlightBg);
    &.hl1 {filter: var(--noteHl1)}
    &.hl2 {filter: var(--noteHl2)}
  }

  /* some colors */
  & :is(.fg-red, .col-red, .c-red, .f-red) {color: var(--noteClr)}
  & :is(.fg-orange, .col-orange, .c-orange, .fg-org, .col-org, .c-org, .f-org) {color: var(--noteClo)}
  & :is(.fg-yellow, .col-yellow, .c-yellow, .fg-ylw, .col-ylw, .c-ylw, .f-ylw) {color: var(--noteCly)}
  & :is(.fg-green, .col-green, .c-green, .fg-grn, .col-grn, .c-grn, .f-grn) {color: var(--noteClg)}
  & :is(.fg-aqua, .col-aqua, .c-aqua, .fg-aqa, .col-aqa, .c-aqa, .f-aqa, .fg-cyan, .col-cyan, .c-cyan, .fg-cyn, .col-cyn, .c-cyn, .f-cyn) {color: var(--noteCla)}
  & :is(.fg-blue, .col-blue, .c-blue, .fg-ble, .fg-blu, .col-ble, .col-blu, .c-ble, .c-blu, .f-ble, .f-blu) {color: var(--noteClb)}
  & :is(.fg-purple, .col-purple, .c-purple, .fg-ppl, .col-ppl, .c-ppl, .f-ppl, .fg-violet, .col-violet, .c-violet, .fg-vlt, .col-vlt, .c-vlt, .f-vlt) {color: var(--noteClp)}
  & :is(.fg-magenta, .col-magenta, .c-magenta, .fg-mgt, .col-mgt, .c-mgt, .f-gmt, .fg-fuchsia, .col-fuchsia, .c-fuchsia, .fg-fch, .col-fch, .c-fch, .f-fch) {color: var(--noteClm)}
  & :is(.fg-white, .col-white, .c-white, .fg-wht, .col-wht, .c-wht, .f-wht) {color: var(--noteClw)}
  & :is(.fg-grey, .col-grey, .c-grey, .fg-gray, .col-gray, .c-gray, .fg-gry, .col-gry, .c-gry, .f-gry) {color: var(--noteCls)}
  & :is(.fg-black, .col-black, .c-black, .fg-blk, .col-blk, .c-blk, .f-blk) {color: var(--noteClk)}

  & :is(.bg-red, .b-red) {padding: 0 .2em; background-color: hsl(from var(--noteClr) h s l / .3); border-radius: var(--radiusHalf)}
  & :is(.bg-orange, .b-orange, .bg-org, .b-org) {padding: 0 .2em; background-color: hsl(from var(--noteClo) h s l / .3); border-radius: var(--radiusHalf)}
  & :is(.bg-yellow, .b-yellow, .bg-ylw, .b-ylw) {padding: 0 .2em; background-color: hsl(from var(--noteCly) h s l / .3); border-radius: var(--radiusHalf)}
  & :is(.bg-green, .b-green, .bg-grn, .b-grn) {padding: 0 .2em; background-color: hsl(from var(--noteClg) h s l / .3); border-radius: var(--radiusHalf)}
  & :is(.bg-aqua, .b-aqua, .bg-aqa, .b-aqa, .bg-cyan, .b-cyan, .bg-cyn, .b-cyn) {padding: 0 .2em; background-color: hsl(from var(--noteCla) h s l / .3); border-radius: var(--radiusHalf)}
  & :is(.bg-blue, .b-blue, .bg-ble, .bg-blu, .b-ble, .b-blu) {padding: 0 .2em; background-color: hsl(from var(--noteClb) h s l / .3); border-radius: var(--radiusHalf)}
  & :is(.bg-purple, .b-purple, .bg-ppl, .b-ppl, .bg-violet, .b-violet, .bg-vlt, .b-vlt) {padding: 0 .2em; background-color: hsl(from var(--noteClp) h s l / .3); border-radius: var(--radiusHalf)}
  & :is(.bg-magenta, .b-magenta, .bg-mgt, .b-mgt, .bg-fuchsia, .b-fuchsia, .bg-fch, .b-fch) {padding: 0 .2em; background-color: hsl(from var(--noteClm) h s l / .3); border-radius: var(--radiusHalf)}
  & :is(.bg-white, .b-white, .bg-wht, .b-wht) {padding: 0 .2em; background-color: hsl(from var(--noteClw) h s l / .9); border-radius: var(--radiusHalf)}
  & :is(.bg-grey, .b-grey, .bg-gray, .b-gray, .bg-gry, .b-gry) {padding: 0 .2em; background-color: hsl(from var(--noteCls) h s l / .9); border-radius: var(--radiusHalf)}
  & :is(.bg-black, .b-black, .bg-blk, .b-blk) {padding: 0 .2em; background-color: hsl(from var(--noteClk) h s l / .9); border-radius: var(--radiusHalf)}

  & :is(.mark, .mk) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--colorHighlightBg) h s l / .86) 63%)}
  & :is(.mark-red, .mk-red, .m-red) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteClr) h s l / .62) 63%)}
  & :is(.mark-orange, .mk-orange, .m-orange, .mark-org, .mk-org, .m-org) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteClo) h s l / .62) 63%)}
  & :is(.mark-yellow, .mk-yellow, .m-yellow, .mark-ylw, .mk-ylw, .m-ylw) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteCly) h s l / .62) 63%)}
  & :is(.mark-green, .mk-green, .m-green, .mark-grn, .mk-grn, .m-grn) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteClg) h s l / .62) 63%)}
  & :is(.mark-aqua, .mk-aqua, .m-aqua, .mark-aqa, .mk-aqa, .m-aqa, .mark-cyan, .mk-cyan, .m-cyan, .mark-cyn, .mk-cyn, .m-cyn) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteCla) h s l / .62) 63%)}
  & :is(.mark-blue, .mk-blue, .m-blue, .mark-ble, .mark-blu, .mk-ble, .mk-blu, .m-ble, .m-blu) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteClb) h s l / .62) 63%)}
  & :is(.mark-purple, .mk-purple, .m-purple, .mark-ppl, .mk-ppl, .m-ppl, .mark-violet, .mk-violet, .m-violet, .mark-vlt, .mk-vlt, .m-vlt) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteClp) h s l / .62) 63%)}
  & :is(.mark-magenta, .mk-magenta, .m-magenta, .mark-mgt, .mk-mgt, .m-mgt, .mark-fuchsia, .mk-fuchsia, .m-fuchsia, .mark-fch, .mk-fch, .m-fch) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteClm) h s l / .62) 63%)}
  & :is(.mark-white, .mk-white, .m-white, .mark-wht, .mk-wht, .m-wht) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteClw) h s l / .96) 63%)}
  & :is(.mark-grey, .mk-grey, .m-grey, .mark-gray, .mk-gray, .m-gray, .mark-gry, .mk-gry, .m-gry) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteCls) h s l / .96) 63%)}
  & :is(.mark-black, .mk-black, .m-black, .mark-blk, .mk-blk, .m-blk) {padding: 0 .1em; background-image: linear-gradient(#0000 61%, hsl(from var(--noteClk) h s l / .96) 63%)}

  & :is(.wv, .wave) {padding: 0 .1em; text-decoration: underline wavy var(--colorHighlightBg)}
  & :is(.wave-red, .wv-red, .w-red) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteClr) h s l / .86)}
  & :is(.wave-orange, .wv-orange, .w-orange, .wave-org, .wv-org, .w-org) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteClo) h s l / .86)}
  & :is(.wave-yellow, .wv-yellow, .w-yellow, .wave-ylw, .wv-ylw, .w-ylw) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteCly) h s l / .86)}
  & :is(.wave-green, .wv-green, .w-green, .wave-grn, .wv-grn, .w-grn) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteClg) h s l / .86)}
  & :is(.wave-aqua, .wv-aqua, .w-aqua, .wave-aqa, .wv-aqa, .w-aqa, .wave-cyan, .wv-cyan, .w-cyan, .wave-cyn, .wv-cyn, .w-cyn) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteCla) h s l / .86)}
  & :is(.wave-blue, .wv-blue, .w-blue, .wave-ble, .wave-blu, .wv-ble, .wv-blu, .w-ble, .w-blu) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteClb) h s l / .86)}
  & :is(.wave-purple, .wv-purple, .w-purple, .wave-ppl, .wv-ppl, .w-ppl, .wave-violet, .wv-violet, .w-violet, .wave-vlt, .wv-vlt, .w-vlt) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteClp) h s l / .86)}
  & :is(.wave-magenta, .wv-magenta, .w-magenta, .wave-mgt, .wv-mgt, .w-mgt, .wave-fuchsia, .wv-fuchsia, .w-fuchsia, .wave-fch, .wv-fch, .w-fch) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteClm) h s l / .86)}
  & :is(.wave-white, .wv-white, .w-white, .wave-wht, .wv-wht, .w-wht) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteClw) h s l / 1.00)}
  & :is(.wave-grey, .wv-grey, .w-grey, .wave-gray, .wv-gray, .w-gray, .wave-gry, .wv-gry, .w-gry) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteCls) h s l / 1.00)}
  & :is(.wave-black, .wv-black, .w-black, .wave-blk, .wv-blk, .w-blk) {padding: 0 .1em; text-decoration: underline wavy hsl(from var(--noteClk) h s l / 1.00)}

  & :is(td, th):has(> :is(.bg-red, .b-red):only-child) {background-color: hsl(from var(--noteClr) h s l / .3)}
  & :is(td, th):has(> :is(.bg-orange, .b-orange, .bg-org, .b-org):only-child) {background-color: hsl(from var(--noteClo) h s l / .3)}
  & :is(td, th):has(> :is(.bg-yellow, .b-yellow, .bg-ylw, .b-ylw):only-child) {background-color: hsl(from var(--noteCly) h s l / .3)}
  & :is(td, th):has(> :is(.bg-green, .b-green, .bg-grn, .b-grn):only-child) {background-color: hsl(from var(--noteClg) h s l / .3)}
  & :is(td, th):has(> :is(.bg-aqua, .b-aqua, .bg-aqa, .b-aqa, .bg-cyan, .b-cyan, .bg-cyn, .b-cyn):only-child) {background-color: hsl(from var(--noteCla) h s l / .3)}
  & :is(td, th):has(> :is(.bg-blue, .b-blue, .bg-ble, .bg-blu, .b-ble, .b-blu):only-child) {background-color: hsl(from var(--noteClb) h s l / .3)}
  & :is(td, th):has(> :is(.bg-purple, .b-purple, .bg-ppl, .b-ppl, .bg-violet, .b-violet, .bg-vlt, .b-vlt):only-child) {background-color: hsl(from var(--noteClp) h s l / .3)}
  & :is(td, th):has(> :is(.bg-magenta, .b-magenta, .bg-mgt, .b-mgt, .bg-fuchsia, .b-fuchsia, .bg-fch, .b-fch):only-child) {background-color: hsl(from var(--noteClm) h s l / .3)}
  & :is(td, th):has(> :is(.bg-white, .b-white, .bg-wht, .b-wht):only-child) {background-color: hsl(from var(--noteClw) h s l / .3)}
  & :is(td, th):has(> :is(.bg-grey, .b-grey, .bg-gray, .b-gray, .bg-gry, .b-gry):only-child) {background-color: hsl(from var(--noteCls) h s l / .3)}
  & :is(td, th):has(> :is(.bg-black, .b-black, .bg-blk, .b-blk):only-child) {background-color: hsl(from var(--noteClk) h s l / .3)}
  & :is(td, th) > :is(.bg-red, .b-red, .bg-orange, .b-orange, .bg-org, .b-org, .bg-yellow, .b-yellow, .bg-ylw, .b-ylw, .bg-green, .b-green,
    .bg-grn, .b-grn, .bg-aqua, .b-aqua, .bg-aqa, .b-aqa, .bg-cyan, .b-cyan, .bg-cyn, .b-cyn, .bg-blue, .b-blue, .bg-ble, .bg-blu, .b-ble, .b-blu,
    .bg-purple, .b-purple, .bg-ppl, .b-ppl, .bg-violet, .b-violet, .bg-vlt, .b-vlt, .bg-magenta, .b-magenta, .bg-mgt, .b-mgt, .bg-fuchsia, .b-fuchsia, .bg-fch, .b-fch, .bg-white,
    .b-white, .bg-wht, .b-wht, .bg-grey, .b-grey, .bg-gray, .b-gray, .bg-gry, .b-gry, .bg-black, .b-black, .bg-blk, .b-blk):only-child {padding: 0; background-color: #0000}


  /** icon / transform **/
  & :is(.ico, .icon), & a:any-link::after {
    --noteFtr: translate(0, -.1em) scale(1, 1);
    background-color: currentColor; display: inline-block; overflow: hidden; margin: 0 .1em;
    width: 1em; height: 1em; vertical-align: middle;
    transform: var(--noteFtr);

    &:where(.mirror-ud, .flip-ud, .f-ud, .f-du, .updown, .up-down, .flip-vertical, .f-vertical, .flip-vert, .f-vert, .f-vrt) {--noteFtr: translate(0, -.1em) scale(1, -1)}
    &:where(.mirror-lr, .flip-lr, .f-lr, .f-rl, .leftright, .left-right, .flip-horizontal, .f-horizontal, .flip-horz, .f-horz, .f-hrz) {--noteFtr: translate(0, -.1em) scale(-1, 1)}

    &:is(.arrow, .arr) {
      clip-path: var(--noteIarr0);
      &:where(.a1, .p1) {clip-path: var(--noteIarr1)}
      &:where(.a2, .p2) {clip-path: var(--noteIarr2)}
      &:where(.a3, .p3) {clip-path: var(--noteIarr3)}
      &:where(.a4, .p4) {clip-path: var(--noteIarr4)}
    }
    &:is(.star, .str) {
      clip-path: var(--noteIstr0);
      &:where(.a1, .p1) {clip-path: var(--noteIstr1)}
      &:where(.a2, .p2) {clip-path: var(--noteIstr2)}
      &:where(.a3, .p3) {clip-path: var(--noteIstr3)}
      &:where(.a4, .p4) {clip-path: var(--noteIstr4)}
    }
    &:is(.link, .lnk) {
      clip-path: var(--noteIlnk0);
      &:where(.a1, .p1) {clip-path: var(--noteIlnk1)}
      &:where(.a2, .p2) {clip-path: var(--noteIlnk2)}
      &:where(.a3, .p3) {clip-path: var(--noteIlnk3)}
    }
    &:is(.check, .chk) {
      clip-path: var(--noteIchk0);
      &:where(.a1, .p1) {clip-path: var(--noteIchk1)}
      &:where(.a2, .p2) {clip-path: var(--noteIchk2)}
      &:where(.a3, .p3) {clip-path: var(--noteIchk3)}
      &:where(.a4, .p4) {clip-path: var(--noteIchk4)}
    }
    &:is(.mark, .mrk) {
      clip-path: var(--noteImrk0);
      &:where(.a1, .p1) {clip-path: var(--noteImrk1)}
      &:where(.a2, .p2) {clip-path: var(--noteImrk2)}
      &:where(.a3, .p3) {clip-path: var(--noteImrk3)}
      &:where(.a4, .p4) {clip-path: var(--noteIchk5)}
    }
  }
  & :is(.transform, .trf, .tfm, .tfx, .trx, .trm) {
    display: inline-block; transform: var(--noteFtr);
    &:where(.mirror-ud, .flip-ud, .f-ud, .f-du, .updown, .up-down, .flip-vertical, .f-vertical, .flip-vert, .f-vert, .f-vrt) {--noteFtr: scale(1, -1)}
    &:where(.mirror-lr, .flip-lr, .f-lr, .f-rl, .leftright, .left-right, .flip-horizontal, .f-horizontal, .flip-horz, .f-horz, .f-hrz) {--noteFtr: scale(-1, 1)}
  }
  & :is(.ico, .icon, .transform, .trf, .tfm, .tfx, .trx, .trm) {
    &:is(.up, .u, .d0, .d360, .d-0, .d-360) {transform: var(--noteFtr) rotate(0deg)}
    &:is(.right, .r, .d90, .d-270) {transform: var(--noteFtr) rotate(90deg)}
    &:is(.down, .d, .d180, .d-180) {transform: var(--noteFtr) rotate(180deg)}
    &:is(.left, .l, .d-90, .d270) {transform: var(--noteFtr) rotate(-90deg)}
    &:is(.up, .u):is(.right, .r), &:is(.d45, .d-315) {transform: var(--noteFtr) rotate(45deg)}
    &:is(.up, .u):is(.left, .l), &:is(.d315, .d-45) {transform: var(--noteFtr) rotate(-45deg)}
    &:is(.down, .d):is(.right, .r), &:is(.d135, .d-225) {transform: var(--noteFtr) rotate(135deg)}
    &:is(.down, .d):is(.left, .l), &:is(.d225, d-135) {transform: var(--noteFtr) rotate(-135deg)}
  }
}


/**** slide-menu ****/
#app:not(.note) .NotesEditor.cardview:has(.MarkdownRender > * > *.slide-menu > * > :is(div, nav, aside, section, article, menu)) {
  position: relative;
  & .MarkdownRender > * > *.slide-menu { /* overlay-area */
    position: absolute; left: 6px; top: 42px; width: calc(100% + 6px - var(--scrollbarWidth)); height: calc(100% - 42px);
    overflow: hidden; z-index: 65535; pointer-events: none;

    & > :is(div, header, footer, nav, aside, section, article, menu) { /* menu */
      display: flex; flex-direction: column; position: absolute;
      right: 0; top: 0; min-width: 38%; max-width: calc(100% - 6em); min-height: 20%; max-height: 62%;
      padding: 0 0 .5em 1em; background-color: var(--colorBgAlphaBlur); backdrop-filter: var(--backgroundBlur);
      border: solid #7782; border-width: 0 0 1px 1px; border-radius: 0 0 0 var(--radius); filter: drop-shadow(0 3px 5px #0002);
      /* transition: .3s cubic-bezier(.3, 1.4, .5, .9); */
      transition: .3s ease-in-out;
      transition-property: filter, transform, opacity;
      pointer-events: auto;
      &:not(:hover) {filter: drop-shadow(0 1px 3px #0000); transform: translate(100%, 0); opacity: .8} /* slide */

      &::before { /* menu-thumb */
        content: '\2630'; display: flex; align-items: center; justify-content: center;
        position: absolute; right: 100%; top: 0; min-width: 2.4em; height: 2.4em; padding: 0 .4em; white-space: nowrap;
        background-color: inherit; border: inherit; border-radius: inherit;
      }
      &[data-thumb]::before {content: attr(data-thumb)}
      & > * {flex: 0 0; margin-right: .5em; margin-bottom: 0; &:first-child:not(:only-child){margin-top: .5em}}
      & > :is(div, header, footer, nav, aside, section, article, menu):has(*) {flex: 1 1 auto; overflow: auto; padding: .5em .5em 0 0; margin-right: 0} /* scroll-area in menu */
      & *:not(:has(*)) {display: block; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100%} /* ellipsis... */
    }
  }
}


